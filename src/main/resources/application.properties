# Application Configuration
spring.application.name=Ecommerce Backend
server.port=8080

# JWT Configuration
jwt.secret=your_jwt_secret_key_here_should_be_long_and_secure
jwt.expiration=86400000

# MySQL Configuration (for testing)
#spring.datasource.url=jdbc:mysql://localhost:3306/ecommerce_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=nikeeta26
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

 PostgreSQL Configuration (example)
# To switch to Postgres, comment the MySQL block above and uncomment the lines below
spring.datasource.url=jdbc:postgresql://localhost:5432/ecommerce_db
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver
# Optional: Hibernate will auto-detect dialect; if you want to set explicitly use:
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# PostgreSQL Configuration (for production)
#spring.datasource.url=jdbc:postgresql://localhost:5432/ecommerce_db
#spring.datasource.username=postgres
#spring.datasource.password=postgres
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# Logging
logging.level.org.springframework=INFO
logging.level.com.ecommerce=DEBUG
debug=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# File Upload
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Admin setup code (used for POST /api/auth/signup-admin)
# Change this to a strong, secret value in your environment.
admin.setup.code=CHANGE_ME_SECURELY
admin.api.key=CHANGE_ADMIN_API_KEY
